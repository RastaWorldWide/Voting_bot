from flask import Flask, send_from_directory
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from dotenv import load_dotenv
import os
import asyncio
import threading

load_dotenv()

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ===
BOT_TOKEN = os.getenv('BOT_TOKEN')
WEBAPP_URL = os.getenv('WEBAPP_URL')

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()  # –¢–µ–ø–µ—Ä—å –±–µ–∑ –ø–µ—Ä–µ–¥–∞—á–∏ bot
app = Flask(__name__)


# === 1. Flask —á–∞—Å—Ç—å ===
@app.route('/')
def index():
    return send_from_directory('.', 'index.html')


@app.route('/<path:path>')
def static_files(path):
    return send_from_directory('.', path)


# === 2. aiogram —á–∞—Å—Ç—å ===
@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    kb = [
        [types.KeyboardButton(
            text="–û—Ç–∫—Ä—ã—Ç—å Web App üåê",
            web_app=types.WebAppInfo(url=WEBAPP_URL)
        )]
    ]
    keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –û—Ç–∫—Ä–æ–π –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ üëá", reply_markup=keyboard)


@dp.message()
async def handle_web_app_data(message: types.Message):
    if hasattr(message, 'web_app_data') and message.web_app_data:
        data = message.web_app_data.data
        await message.answer(f"–ü–æ–ª—É—á–µ–Ω–æ –∏–∑ Web App:\n<code>{data}</code>", parse_mode="HTML")


# === 3. –ó–∞–ø—É—Å–∫ –≤—Å–µ–≥–æ ===
async def run_aiogram():
    await dp.start_polling(bot)  # bot –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∑–¥–µ—Å—å


def run_flask():
    app.run(host="0.0.0.0", port=8080, debug=False, use_reloader=False)


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    flask_thread = threading.Thread(target=run_flask)
    flask_thread.daemon = True
    flask_thread.start()

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    asyncio.run(run_aiogram())