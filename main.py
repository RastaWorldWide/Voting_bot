from flask import Flask, send_from_directory
from aiogram import Bot, Dispatcher, types
# from aiogram.utils import executor
from dotenv import load_dotenv
import os
import asyncio

load_dotenv()

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ===
BOT_TOKEN = os.getenv('BOT_TOKEN')
WEBAPP_URL = os.getenv('WEBAPP_URL')

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)
app = Flask(__name__)

# === 1. Flask —á–∞—Å—Ç—å ===
@app.route('/')
def index():
    return send_from_directory('.', 'index.html')

# === 2. aiogram —á–∞—Å—Ç—å ===
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    kb = [
        [types.KeyboardButton(
            text="–û—Ç–∫—Ä—ã—Ç—å Web App üåê",
            web_app=types.WebAppInfo(url=WEBAPP_URL)
        )]
    ]
    keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –û—Ç–∫—Ä–æ–π –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ üëá", reply_markup=keyboard)

# –ö–æ–≥–¥–∞ Web App –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç tg.sendData() ‚Üí —Å—é–¥–∞ –ø—Ä–∏–ª–µ—Ç–∞–µ—Ç web_app_data
@dp.message_handler(content_types=types.ContentType.WEB_APP_DATA)
async def handle_web_app_data(message: types.Message):
    data = message.web_app_data.data
    await message.answer(f"–ü–æ–ª—É—á–µ–Ω–æ –∏–∑ Web App:\n<code>{data}</code>", parse_mode="HTML")

# === 3. –ó–∞–ø—É—Å–∫ –≤—Å–µ–≥–æ ===
async def run_aiogram():
    await dp.start_polling()

def run_flask():
    app.run(host="0.0.0.0", port=8080)

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –∏ Aiogram –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
    loop = asyncio.get_event_loop()
    loop.create_task(run_aiogram())
    run_flask()
